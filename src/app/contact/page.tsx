"use client";

import { useState } from "react";
import { useTheme } from "@/context/ThemeContext";
import { motion } from "framer-motion";
import { FiMail, FiPhone, FiMapPin } from "react-icons/fi";
import { supabase } from "@/lib/supabase";
import WorkflowAutomationContactForm from "@/components/workflow-automation/WorkflowAutomationContactForm";

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –≤–µ–±—Ö—É–∫ n8n
async function sendDataToN8N(formData: any): Promise<void> {
  console.log('–ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –¥–∞–Ω–Ω—ã—Ö –≤ n8n:', formData);
  
  return new Promise<void>((resolve, reject) => {
    const payload = {
      formId: "contact-page-form",
      ...formData,
      submittedAt: new Date().toISOString(),
    };
    
    console.log('–ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:', payload);
    
    // URL –≤–µ–±—Ö—É–∫–∞ n8n
    const webhookUrl = 'https://dev.neuropolis.ai/webhook/9f5b312f-f10f-4ac8-8908-2ae20c8d93de';
    
    // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ fetch —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º URL-–ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    try {
      // –°–æ–∑–¥–∞–µ–º URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∑–∞–ø—Ä–æ—Å–∞ –≤–º–µ—Å—Ç–æ —Ç–µ–ª–∞
      const urlParams = new URLSearchParams();
      
      // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –ø–æ–ª—è —Ñ–æ—Ä–º—ã –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
      Object.entries(payload).forEach(([key, value]) => {
        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {
          urlParams.append(key, String(value));
        } else {
          urlParams.append(key, JSON.stringify(value));
        }
      });
      
      // –ü–æ–ª–Ω—ã–π URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
      const fullUrl = `${webhookUrl}?${urlParams.toString()}`;
      console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ GET –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ URL:', fullUrl);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º GET –∑–∞–ø—Ä–æ—Å –≤–º–µ—Å—Ç–æ POST
      fetch(fullUrl, {
        method: 'GET',
        headers: {
          'Accept': 'application/json',
        },
        mode: 'cors',
      })
      .then(response => {
        console.log('–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', response.status, response.statusText);
        return response.text();
      })
      .then(text => {
        console.log('–¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞:', text);
        
        // –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ –≤–µ–±—Ö—É–∫, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Supabase
        saveToSupabase(formData)
          .then(() => {
            // –ü–æ—Å–ª–µ Supabase –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
            try {
              sendToTelegramBackend(formData);
            } catch (e) {
              console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram:', e);
            }
            resolve();
          })
          .catch(error => {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ Supabase:', error);
            resolve(); // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –æ—à–∏–±–∫—É
          });
      })
      .catch(error => {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ fetch:', error);
        
        // –†–µ–∑–µ—Ä–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        console.log('–ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...');
        const img = new Image();
        img.onload = () => {
          console.log('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —á–µ—Ä–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ');
          saveToSupabase(formData).catch(e => console.error('–û—à–∏–±–∫–∞ Supabase:', e));
          resolve();
        };
        img.onerror = () => {
          console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —á–µ—Ä–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º');
          saveToSupabase(formData).catch(e => console.error('–û—à–∏–±–∫–∞ Supabase:', e));
          resolve();
        };
        img.src = fullUrl;
      });
      
    } catch (e) {
      console.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö:', e);
      saveToSupabase(formData).catch(e => console.error('–û—à–∏–±–∫–∞ Supabase:', e));
      resolve(); // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
    }
    
    // –û–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –ø–æ–ø—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É –≤ iframe
    try {
      const frame = document.createElement('iframe');
      frame.name = 'hiddenFrame';
      frame.style.display = 'none';
      document.body.appendChild(frame);
      
      const form = document.createElement('form');
      form.action = webhookUrl;
      form.method = 'get'; // –ò—Å–ø–æ–ª—å–∑—É–µ–º GET –≤–º–µ—Å—Ç–æ POST
      form.target = 'hiddenFrame';
      
      // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –ø–æ–ª—è —Ñ–æ—Ä–º—ã –∫–∞–∫ —Å–∫—Ä—ã—Ç—ã–µ input
      Object.entries(payload).forEach(([key, value]) => {
        const input = document.createElement('input');
        input.type = 'hidden';
        input.name = key;
        
        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {
          input.value = String(value);
        } else {
          input.value = JSON.stringify(value);
        }
        
        form.appendChild(input);
      });
      
      document.body.appendChild(form);
      form.submit();
      
      console.log('–î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É –≤ —Å–∫—Ä—ã—Ç–æ–º —Ñ—Ä–µ–π–º–µ');
      
      // –û—á–∏—Å—Ç–∫–∞
      setTimeout(() => {
        try {
          document.body.removeChild(frame);
          document.body.removeChild(form);
        } catch (e) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ iframe:', e);
        }
      }, 1000);
    } catch (frameError) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —á–µ—Ä–µ–∑ —Ñ—Ä–µ–π–º:', frameError);
    }
  });
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ Supabase
async function saveToSupabase(formData: any): Promise<void> {
  console.log('–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ Supabase:', formData);
  
  try {
    const { error } = await supabase.from("contacts").insert([
      {
        name: formData.name,
        email: formData.email,
        phone: formData.phone || null,
        company: formData.company || null,
        message: formData.message || null,
        created_at: new Date().toISOString(),
      },
    ]);

    if (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ Supabase:", error);
      throw error;
    }
    
    console.log('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ Supabase');
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ Supabase:', error);
    throw error;
  }
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Telegram
function sendToTelegramBackend(formData: any): void {
  console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Telegram:', formData);
  
  try {
    const BACKUP_BOT_TOKEN = "8020073798:AAHmXxi9XijA0z1k9JY2DzNpDI7j6ICqthI";
    const BACKUP_CHAT_ID = "-1002655068247";

    const botToken = process.env.NEXT_PUBLIC_TELEGRAM_BOT_TOKEN || BACKUP_BOT_TOKEN;
    const chatId = process.env.NEXT_PUBLIC_TELEGRAM_CHAT_ID || BACKUP_CHAT_ID;

    if (!botToken || !chatId) {
      console.error("–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã Telegram-–±–æ—Ç–∞");
      return;
    }

    const text = `\nüì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ (–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ö–æ–Ω—Ç–∞–∫—Ç–æ–≤):\nüë§ –ò–º—è: ${
      formData.name
    }\nüè¢ –ö–æ–º–ø–∞–Ω–∏—è: ${formData.company || "–ù–µ —É–∫–∞–∑–∞–Ω–∞"}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: ${
      formData.phone || "–ù–µ —É–∫–∞–∑–∞–Ω"
    }\n‚úâÔ∏è Email: ${formData.email}\nüí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${
      formData.message || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
    }\n`;

    const url = `https://api.telegram.org/bot${botToken}/sendMessage`;
    const requestData = {
      chat_id: chatId,
      text: text,
      parse_mode: "Markdown",
    };

    fetch(url, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json",
      },
      body: JSON.stringify(requestData),
    })
    .then(response => {
      if (!response.ok) {
        console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:", response.statusText);
      } else {
        console.log('–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram');
      }
    })
    .catch(error => {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram:", error);
    });
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram:", error);
  }
}

export default function ContactPage() {
  const { isDark } = useTheme();
  const [formSubmitted, setFormSubmitted] = useState(false);
  
  const handleSubmitSuccess = (data: any) => {
    console.log('–§–æ—Ä–º–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞:', data);
    setFormSubmitted(true);
    
    // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ Beacon API –∫–∞–∫ —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç
    if (navigator.sendBeacon) {
      // –°–æ–∑–¥–∞–µ–º URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∑–∞–ø—Ä–æ—Å–∞ –≤–º–µ—Å—Ç–æ —Ç–µ–ª–∞
      const urlParams = new URLSearchParams();
      const payload = {
        formId: "contact-page-form",
        ...data,
        submittedAt: new Date().toISOString(),
      };
      
      // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –ø–æ–ª—è —Ñ–æ—Ä–º—ã –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
      Object.entries(payload).forEach(([key, value]) => {
        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {
          urlParams.append(key, String(value));
        } else {
          urlParams.append(key, JSON.stringify(value));
        }
      });
      
      // –ü–æ–ª–Ω—ã–π URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
      const fullUrl = `https://dev.neuropolis.ai/webhook/9f5b312f-f10f-4ac8-8908-2ae20c8d93de?${urlParams.toString()}`;
      
      const success = navigator.sendBeacon(fullUrl);
      console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ Beacon API:', success);
    }
  };
  
  const handleSubmitError = (error: any) => {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã:', error);
    // –î–∞–∂–µ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —É—Å–ø–µ—à–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    setFormSubmitted(true);
  };

  // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∞–Ω–∏–º–∞—Ü–∏–∏
  const containerVariants = {
    hidden: { opacity: 0 },
    show: {
      opacity: 1,
      transition: {
        staggerChildren: 0.15,
      },
    },
  };

  // –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–ª–∞—Å—Å—ã –¥–ª—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
  const inputClasses = `block w-full px-4 py-3 rounded-xl border border-gray-300 dark:border-gray-700 
    focus:ring-2 focus:ring-blue-500/50 focus:border-blue-500 bg-white dark:bg-gray-800/50 
    dark:text-white text-lg transition-colors duration-200 placeholder:text-gray-400 dark:placeholder:text-gray-500`;

  const labelClasses = `block text-base font-medium text-gray-700 dark:text-gray-300 mb-1.5`;

  return (
    <div className="flex flex-col min-h-screen">
      <motion.main
        variants={containerVariants}
        initial="hidden"
        animate="show"
        className="flex-grow bg-gradient-to-b from-blue-50/50 to-white dark:from-blue-950/10 dark:to-gray-950"
      >
        {/* –û—Å–Ω–æ–≤–Ω–æ–π —Ä–∞–∑–¥–µ–ª —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
        <div className="relative py-24 md:py-32 overflow-hidden">
          {/* –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç WorkflowAutomationContactForm */}
          <WorkflowAutomationContactForm
            title="–ù–∞—á–Ω–∏—Ç–µ –≤–Ω–µ–¥—Ä—è—Ç—å –ò–ò —É–∂–µ —Å–µ–≥–æ–¥–Ω—è"
            subtitle="–ü–æ–ª—É—á–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø–æ –≤–Ω–µ–¥—Ä–µ–Ω–∏—é –ò–ò-—Ä–µ—à–µ–Ω–∏–π –≤ –≤–∞—à–∏ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å—ã. –ù–∞—à–∏ —ç–∫—Å–ø–µ—Ä—Ç—ã –ø–æ–º–æ–≥—É—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è."
            submitButtonText="–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é"
            showCompanyField={true}
            showPhoneField={true}
            showFeatures={true}
            showConfidentiality={true}
            useContainer={false}
            fullWidth={true}
            formId="contact-page-form"
            features={[
              {
                icon: <FiMail />,
                title: "–ò–ò-—Ä–µ—à–µ–Ω–∏—è –ø–æ–¥ –∫–ª—é—á",
                description:
                  "–†–∞–∑—Ä–∞–±–æ—Ç–∞–µ–º –∏ –≤–Ω–µ–¥—Ä–∏–º —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ò–ò-–∞–≥–µ–Ω—Ç–æ–≤, —É—á–∏—Ç—ã–≤–∞—é—â–∏—Ö —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞.",
              },
              {
                icon: <FiPhone />,
                title: "–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è",
                description:
                  "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ–º —Ä—É—Ç–∏–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏, –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö –∏ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å—ã, –æ—Å–≤–æ–±–æ–∂–¥–∞—è –≤—Ä–µ–º—è –¥–ª—è –∫–ª—é—á–µ–≤—ã—Ö –∑–∞–¥–∞—á.",
              },
              {
                icon: <FiMapPin />,
                title: "–ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å",
                description:
                  "–°–æ–∑–¥–∞–µ–º —Ä–µ—à–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞—Å—Ç—É—Ç –≤–º–µ—Å—Ç–µ —Å –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–µ–π –∏ –∞–¥–∞–ø—Ç–∏—Ä—É—é—Ç—Å—è –∫ –º–µ–Ω—è—é—â–∏–º—Å—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –±–∏–∑–Ω–µ—Å–∞.",
              },
            ]}
            confidentialityText="–ú—ã —Ü–µ–Ω–∏–º –≤–∞—à–µ –¥–æ–≤–µ—Ä–∏–µ –∏ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—É—é –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –≤—Å–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—É—é –≤—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ –Ω–∞–º. –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞—â–∏—â–µ–Ω—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ–º."
            onSubmitSuccess={handleSubmitSuccess}
            onSubmitError={handleSubmitError}
            customSubmit={sendDataToN8N}
            backgroundColor={
              isDark ? "rgba(15, 23, 42, 0.5)" : "rgba(255, 255, 255, 0.7)"
            }
            privacyPolicyUrl="/privacy-policy"
            requirePhoneField={true}
          />
        </div>
      </motion.main>
    </div>
  );
}
